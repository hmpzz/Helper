<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HD.DBHelper</name>
    </assembly>
    <members>
        <member name="T:HD.DBHelper.BaseSqlMapDao">
            <summary>
            基于IBatisNet的数据访问基类 
            </summary>
        </member>
        <member name="M:HD.DBHelper.BaseSqlMapDao.ExecuteQueryForList``1(System.String,System.Object)">
            <summary>
            得到列表
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="statementName">操作名称，对应xml中的Statement的id</param>
            <param name="parameterObject">参数</param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.BaseSqlMapDao.ExecuteQueryForList``1(System.String,System.Object,System.Int32,System.Int32)">
            <summary>
            得到指定数量的记录数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="statementName"></param>
            <param name="parameterObject">参数</param>
            <param name="skipResults">跳过的记录数</param>
            <param name="maxResults">最大返回的记录数</param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.BaseSqlMapDao.ExecuteQueryForPaginatedList(System.String,System.Object,System.Int32)">
            <summary>
            得到分页的列表
            </summary>
            <param name="statementName">操作名称</param>
            <param name="parameterObject">参数</param>
            <param name="pageSize">每页记录数</param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.BaseSqlMapDao.ExecuteQueryForObject``1(System.String,System.Object)">
            <summary>
            查询得到对象的一个实例
            </summary>
            <typeparam name="T">对象type</typeparam>
            <param name="statementName">操作名</param>
            <param name="parameterObject">参数</param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.BaseSqlMapDao.ExecuteInsert(System.String,System.Object)">
            <summary>
            执行添加
            </summary>
            <param name="statementName">操作名</param>
            <param name="parameterObject">参数</param>
        </member>
        <member name="M:HD.DBHelper.BaseSqlMapDao.ExecuteUpdate(System.String,System.Object)">
            <summary>
            执行修改
            </summary>
            <param name="statementName">操作名</param>
            <param name="parameterObject">参数</param>
        </member>
        <member name="M:HD.DBHelper.BaseSqlMapDao.ExecuteDelete(System.String,System.Object)">
            <summary>
            执行删除
            </summary>
            <param name="statementName">操作名</param>
            <param name="parameterObject">参数</param>
        </member>
        <member name="F:HD.DBHelper.EffentNextType.None">
            <summary>
            对其他语句无任何影响 
            </summary>
        </member>
        <member name="F:HD.DBHelper.EffentNextType.WhenHaveContine">
            <summary>
            当前语句必须为"select count(1) from .."格式，如果存在则继续执行，不存在回滚事务
            </summary>
        </member>
        <member name="F:HD.DBHelper.EffentNextType.WhenNoHaveContine">
            <summary>
            当前语句必须为"select count(1) from .."格式，如果不存在则继续执行，存在回滚事务
            </summary>
        </member>
        <member name="F:HD.DBHelper.EffentNextType.ExcuteEffectRows">
            <summary>
            当前语句影响到的行数必须大于0，否则回滚事务
            </summary>
        </member>
        <member name="F:HD.DBHelper.EffentNextType.SolicitationEvent">
            <summary>
            引发事件-当前语句必须为"select count(1) from .."格式，如果不存在则继续执行，存在回滚事务
            </summary>
        </member>
        <member name="T:HD.DBHelper.DbHelperMySQL">
            <summary>
            数据访问抽象基础类
            Copyright (C) Maticsoft
            </summary>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.GetMaxID(System.String,System.String)">
            <summary>
            得到最大值
            </summary>
            <param name="FieldName"></param>
            <param name="TableName"></param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.Exists(System.String)">
            <summary>
            是否存在
            </summary>
            <param name="strSql"></param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.Exists(System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            是否存在（基于MySqlParameter）
            </summary>
            <param name="strSql"></param>
            <param name="cmdParms"></param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.ExecuteSql(System.String)">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.ExecuteSqlTran(System.Collections.Generic.List{HD.DBHelper.CommandInfo},System.Collections.Generic.List{HD.DBHelper.CommandInfo})">
            <summary>
            执行MySql和Oracle滴混合事务
            </summary>
            <param name="list">SQL命令行列表</param>
            <param name="oracleCmdSqlList">Oracle命令行列表</param>
            <returns>执行结果 0-由于SQL造成事务失败 -1 由于Oracle造成事务失败 1-整体事务执行成功</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.ExecuteSqlTran(System.Collections.Generic.List{System.String})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.ExecuteSql(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.ExecuteSqlGet(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.ExecuteSqlInsertImg(System.String,System.Byte[])">
            <summary>
            向数据库里插入图像格式的字段(和上面情况类似的另一种实例)
            </summary>
            <param name="strSQL">SQL语句</param>
            <param name="fs">图像字节,数据库的字段类型为image的情况</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.GetSingle(System.String)">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.ExecuteReader(System.String)">
            <summary>
            执行查询语句，返回MySqlDataReader ( 注意：调用该方法后，一定要对MySqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>MySqlDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.Query(System.String)">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.ExecuteSql(System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.ExecuteSqlTran(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的MySqlParameter[]）</param>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.ExecuteSqlTran(System.Collections.Generic.List{HD.DBHelper.CommandInfo})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的MySqlParameter[]）</param>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.ExecuteSqlTranWithIndentity(System.Collections.Generic.List{HD.DBHelper.CommandInfo})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的MySqlParameter[]）</param>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.ExecuteSqlTranWithIndentity(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的MySqlParameter[]）</param>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.GetSingle(System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.ExecuteReader(System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            执行查询语句，返回MySqlDataReader ( 注意：调用该方法后，一定要对MySqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>MySqlDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperMySQL.Query(System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="T:HD.DBHelper.DbHelperOleDb">
            <summary>
            Copyright (C) Maticsoft
            数据访问基础类(基于OleDb)
            可以用户可以修改满足自己项目的需要。
            </summary>
        </member>
        <member name="M:HD.DBHelper.DbHelperOleDb.ExecuteSql(System.String)">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOleDb.ExecuteSqlTran(System.Collections.ArrayList)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="M:HD.DBHelper.DbHelperOleDb.ExecuteSql(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOleDb.ExecuteSqlInsertImg(System.String,System.Byte[])">
            <summary>
            向数据库里插入图像格式的字段(和上面情况类似的另一种实例)
            </summary>
            <param name="strSQL">SQL语句</param>
            <param name="fs">图像字节,数据库的字段类型为image的情况</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOleDb.GetSingle(System.String)">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOleDb.ExecuteReader(System.String)">
            <summary>
            执行查询语句，返回OleDbDataReader
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>OleDbDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOleDb.Query(System.String)">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOleDb.ExecuteSql(System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOleDb.ExecuteSqlTran(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的OleDbParameter[]）</param>
        </member>
        <member name="M:HD.DBHelper.DbHelperOleDb.GetSingle(System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOleDb.ExecuteReader(System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            执行查询语句，返回OleDbDataReader
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>OleDbDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOleDb.Query(System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="T:HD.DBHelper.DbHelperOra">
            <summary>
            Copyright (C) Maticsoft
            数据访问基础类(基于Oracle)
            用户可以修改满足自己项目的需要。
            </summary>
        </member>
        <member name="M:HD.DBHelper.DbHelperOra.ExecuteSql(System.String)">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOra.ExecuteSqlTran(System.Collections.ArrayList)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="M:HD.DBHelper.DbHelperOra.ExecuteSql(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOra.ExecuteSqlInsertImg(System.String,System.Byte[])">
            <summary>
            向数据库里插入图像格式的字段(和上面情况类似的另一种实例)
            </summary>
            <param name="strSQL">SQL语句</param>
            <param name="fs">图像字节,数据库的字段类型为image的情况</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOra.GetSingle(System.String)">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOra.ExecuteReader(System.String)">
            <summary>
            执行查询语句，返回OracleDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>OracleDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOra.Query(System.String)">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOra.ExecuteSql(System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOra.ExecuteSqlTran(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的OracleParameter[]）</param>
        </member>
        <member name="M:HD.DBHelper.DbHelperOra.GetSingle(System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOra.ExecuteReader(System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            执行查询语句，返回OracleDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>OracleDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOra.Query(System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOra.RunProcedure(System.String,System.Data.IDataParameter[])">
            <summary>
            执行存储过程 返回SqlDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>OracleDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOra.RunProcedure(System.String,System.Data.IDataParameter[],System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <param name="tableName">DataSet结果中的表名</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOra.BuildQueryCommand(System.Data.OracleClient.OracleConnection,System.String,System.Data.IDataParameter[])">
            <summary>
            构建 OracleCommand 对象(用来返回一个结果集，而不是一个整数值)
            </summary>
            <param name="connection">数据库连接</param>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>OracleCommand</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOra.RunProcedure(System.String,System.Data.IDataParameter[],System.Int32@)">
            <summary>
            执行存储过程，返回影响的行数		
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <param name="rowsAffected">影响的行数</param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperOra.BuildIntCommand(System.Data.OracleClient.OracleConnection,System.String,System.Data.IDataParameter[])">
            <summary>
            创建 OracleCommand 对象实例(用来返回一个整数值)	
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>OracleCommand 对象实例</returns>
        </member>
        <member name="T:HD.DBHelper.DbHelperSQL">
            <summary>
            数据访问抽象基础类
            Copyright (C) Maticsoft 
            </summary>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.ColumnExists(System.String,System.String)">
            <summary>
            判断是否存在某表的某个字段
            </summary>
            <param name="tableName">表名称</param>
            <param name="columnName">列名称</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.TabExists(System.String)">
            <summary>
            表是否存在
            </summary>
            <param name="TableName"></param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.ExecuteSql(System.String)">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.ExecuteSqlTran(System.Collections.Generic.List{HD.DBHelper.CommandInfo},System.Collections.Generic.List{HD.DBHelper.CommandInfo})">
            <summary>
            执行Sql和Oracle滴混合事务
            </summary>
            <param name="list">SQL命令行列表</param>
            <param name="oracleCmdSqlList">Oracle命令行列表</param>
            <returns>执行结果 0-由于SQL造成事务失败 -1 由于Oracle造成事务失败 1-整体事务执行成功</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.ExecuteSqlTran(System.Collections.Generic.List{System.String})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.ExecuteSql(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.ExecuteSqlGet(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.ExecuteSqlInsertImg(System.String,System.Byte[])">
            <summary>
            向数据库里插入图像格式的字段(和上面情况类似的另一种实例)
            </summary>
            <param name="strSQL">SQL语句</param>
            <param name="fs">图像字节,数据库的字段类型为image的情况</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.GetSingle(System.String)">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.ExecuteReader(System.String)">
            <summary>
            执行查询语句，返回SqlDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.Query(System.String)">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.ExecuteSql(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.ExecuteSqlTran(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.ExecuteSqlTran(System.Collections.Generic.List{HD.DBHelper.CommandInfo})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.ExecuteSqlTranWithIndentity(System.Collections.Generic.List{HD.DBHelper.CommandInfo})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.ExecuteSqlTranWithIndentity(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.GetSingle(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.ExecuteReader(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询语句，返回SqlDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.Query(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.RunProcedure(System.String,System.Data.IDataParameter[])">
            <summary>
            执行存储过程，返回SqlDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.RunProcedure(System.String,System.Data.IDataParameter[],System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <param name="tableName">DataSet结果中的表名</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.BuildQueryCommand(System.Data.SqlClient.SqlConnection,System.String,System.Data.IDataParameter[])">
            <summary>
            构建 SqlCommand 对象(用来返回一个结果集，而不是一个整数值)
            </summary>
            <param name="connection">数据库连接</param>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>SqlCommand</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.RunProcedure(System.String,System.Data.IDataParameter[],System.Int32@)">
            <summary>
            执行存储过程，返回影响的行数		
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <param name="rowsAffected">影响的行数</param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL.BuildIntCommand(System.Data.SqlClient.SqlConnection,System.String,System.Data.IDataParameter[])">
            <summary>
            创建 SqlCommand 对象实例(用来返回一个整数值)	
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>SqlCommand 对象实例</returns>
        </member>
        <member name="T:HD.DBHelper.DbHelperSQL2">
            <summary>
            Enterprise Library 2.0 数据访问进一步封装类
            Copyright (C) Maticsoft
            All rights reserved	
            </summary>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.BuildDBParameter(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand,System.Data.SqlClient.SqlParameter[])">
            <summary>
            加载参数
            </summary>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.ExecuteSql(System.String)">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="strSql">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.ExecuteSqlTran(System.Collections.ArrayList)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.ExecuteSql(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="strSql">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.ExecuteSqlGet(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="strSql">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>返回语句里的查询结果</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.ExecuteSqlInsertImg(System.String,System.Byte[])">
            <summary>
            向数据库里插入图像格式的字段(和上面情况类似的另一种实例)
            </summary>
            <param name="strSql">SQL语句</param>
            <param name="fs">图像字节,数据库的字段类型为image的情况</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.GetSingle(System.String)">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="strSql">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.ExecuteReader(System.String)">
            <summary>
            执行查询语句，返回SqlDataReader ( 注意：使用后一定要对SqlDataReader进行Close )
            </summary>
            <param name="strSql">查询语句</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.Query(System.String)">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="strSql">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.ExecuteSql(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="strSql">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.ExecuteSqlTran(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.GetSingle(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="strSql">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.ExecuteReader(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询语句，返回SqlDataReader ( 注意：使用后一定要对SqlDataReader进行Close )
            </summary>
            <param name="strSql">查询语句</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.Query(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="strSql">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.RunProcedure(System.String)">
            <summary>
            执行存储过程，返回影响的行数		
            </summary>       
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.RunProcedure(System.String,System.Data.IDataParameter[],System.Data.SqlClient.SqlParameter,System.Int32)">
            <summary>
            执行存储过程，返回输出参数的值和影响的行数		
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <param name="OutParameter">输出参数名称</param>
            <param name="rowsAffected">影响的行数</param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.RunProcedure(System.String,System.Data.IDataParameter[])">
            <summary>
            执行存储过程，返回SqlDataReader ( 注意：使用后一定要对SqlDataReader进行Close )
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.RunProcedure(System.String,System.Data.IDataParameter[],System.String)">
            <summary>
            执行存储过程，返回DataSet
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <param name="tableName">DataSet结果中的表名</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.RunProcedure(System.String,System.Data.IDataParameter[],System.String,System.Int32)">
            <summary>
            执行存储过程，返回DataSet(设定等待时间)
            </summary>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.BuildQueryCommand(System.Data.SqlClient.SqlConnection,System.String,System.Data.IDataParameter[])">
            <summary>
            构建 SqlCommand 对象(用来返回一个结果集，而不是一个整数值)
            </summary>
            <param name="connection">数据库连接</param>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>SqlCommand</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQL2.BuildIntCommand(System.Data.SqlClient.SqlConnection,System.String,System.Data.IDataParameter[])">
            <summary>
            创建 SqlCommand 对象实例(用来返回一个整数值)	
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>SqlCommand 对象实例</returns>
        </member>
        <member name="T:HD.DBHelper.DbHelperSQLite">
            <summary>
            Copyright (C) 2011 Maticsoft 
            数据访问基础类(基于SQLite)
            可以用户可以修改满足自己项目的需要。
            </summary>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLite.ExecuteSql(System.String)">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLite.ExecuteSqlTran(System.Collections.ArrayList)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLite.ExecuteSql(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLite.ExecuteSqlInsertImg(System.String,System.Byte[])">
            <summary>
            向数据库里插入图像格式的字段(和上面情况类似的另一种实例)
            </summary>
            <param name="strSQL">SQL语句</param>
            <param name="fs">图像字节,数据库的字段类型为image的情况</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLite.GetSingle(System.String)">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLite.ExecuteReader(System.String)">
            <summary>
            执行查询语句，返回SQLiteDataReader
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>SQLiteDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLite.Query(System.String)">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLite.ExecuteSql(System.String,System.Data.SQLite.SQLiteParameter[])">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLite.ExecuteSqlTran(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SQLiteParameter[]）</param>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLite.GetSingle(System.String,System.Data.SQLite.SQLiteParameter[])">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLite.ExecuteReader(System.String,System.Data.SQLite.SQLiteParameter[])">
            <summary>
            执行查询语句，返回SQLiteDataReader
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>SQLiteDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLite.Query(System.String,System.Data.SQLite.SQLiteParameter[])">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="T:HD.DBHelper.DbHelperSQLP">
            <summary>
            数据访问类，可用于访问不同数据库
            Copyright (C) Maticsoft
            </summary>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.ColumnExists(System.String,System.String)">
            <summary>
            判断是否存在某表的某个字段
            </summary>
            <param name="tableName">表名称</param>
            <param name="columnName">列名称</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.TabExists(System.String)">
            <summary>
            表是否存在
            </summary>
            <param name="TableName"></param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.ExecuteSql(System.String)">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.ExecuteSqlTran(System.Collections.Generic.List{HD.DBHelper.CommandInfo},System.Collections.Generic.List{HD.DBHelper.CommandInfo})">
            <summary>
            执行Sql和Oracle滴混合事务
            </summary>
            <param name="list">SQL命令行列表</param>
            <param name="oracleCmdSqlList">Oracle命令行列表</param>
            <returns>执行结果 0-由于SQL造成事务失败 -1 由于Oracle造成事务失败 1-整体事务执行成功</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.ExecuteSqlTran(System.Collections.Generic.List{System.String})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.ExecuteSql(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.ExecuteSqlGet(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.ExecuteSqlInsertImg(System.String,System.Byte[])">
            <summary>
            向数据库里插入图像格式的字段(和上面情况类似的另一种实例)
            </summary>
            <param name="strSQL">SQL语句</param>
            <param name="fs">图像字节,数据库的字段类型为image的情况</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.GetSingle(System.String)">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.ExecuteReader(System.String)">
            <summary>
            执行查询语句，返回SqlDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.Query(System.String)">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.ExecuteSql(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.ExecuteSqlTran(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.ExecuteSqlTran(System.Collections.Generic.List{HD.DBHelper.CommandInfo})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.ExecuteSqlTranWithIndentity(System.Collections.Generic.List{HD.DBHelper.CommandInfo})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.ExecuteSqlTranWithIndentity(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.GetSingle(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.ExecuteReader(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询语句，返回SqlDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.Query(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.RunProcedure(System.String,System.Data.IDataParameter[])">
            <summary>
            执行存储过程，返回SqlDataReader  ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.RunProcedure(System.String,System.Data.IDataParameter[],System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <param name="tableName">DataSet结果中的表名</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.BuildQueryCommand(System.Data.SqlClient.SqlConnection,System.String,System.Data.IDataParameter[])">
            <summary>
            构建 SqlCommand 对象(用来返回一个结果集，而不是一个整数值)
            </summary>
            <param name="connection">数据库连接</param>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>SqlCommand</returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.RunProcedure(System.String,System.Data.IDataParameter[],System.Int32@)">
            <summary>
            执行存储过程，返回影响的行数		
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <param name="rowsAffected">影响的行数</param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.DbHelperSQLP.BuildIntCommand(System.Data.SqlClient.SqlConnection,System.String,System.Data.IDataParameter[])">
            <summary>
            创建 SqlCommand 对象实例(用来返回一个整数值)	
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>SqlCommand 对象实例</returns>
        </member>
        <member name="T:HD.DBHelper.DESEncrypt">
            <summary>
            DES加密/解密类。
            </summary>
        </member>
        <member name="M:HD.DBHelper.DESEncrypt.Encrypt(System.String)">
            <summary>
            加密
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.DESEncrypt.Encrypt(System.String,System.String)">
            <summary> 
            加密数据 
            </summary> 
            <param name="Text"></param> 
            <param name="sKey"></param> 
            <returns></returns> 
        </member>
        <member name="M:HD.DBHelper.DESEncrypt.Decrypt(System.String)">
            <summary>
            解密
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.DESEncrypt.Decrypt(System.String,System.String)">
            <summary> 
            解密数据 
            </summary> 
            <param name="Text"></param> 
            <param name="sKey"></param> 
            <returns></returns> 
        </member>
        <member name="T:HD.DBHelper.OracleHelper">
            <summary>
            A helper class used to execute queries against an Oracle database
            </summary>
        </member>
        <member name="M:HD.DBHelper.OracleHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            Execute a database query which does not include a select
            </summary>
            <param name="connString">Connection string to database</param>
            <param name="cmdType">Command type either stored procedure or SQL</param>
            <param name="cmdText">Acutall SQL Command</param>
            <param name="commandParameters">Parameters to bind to the command</param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.OracleHelper.Query(System.String,System.String)">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:HD.DBHelper.OracleHelper.GetSingle(System.String,System.String)">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:HD.DBHelper.OracleHelper.ExecuteNonQuery(System.Data.OracleClient.OracleTransaction,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            Execute an OracleCommand (that returns no resultset) against an existing database transaction 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "PublishOrders", new OracleParameter(":prodid", 24));
            </remarks>
            <param name="trans">an existing database transaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or PL/SQL command</param>
            <param name="commandParameters">an array of OracleParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:HD.DBHelper.OracleHelper.ExecuteNonQuery(System.Data.OracleClient.OracleConnection,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            Execute an OracleCommand (that returns no resultset) against an existing database connection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new OracleParameter(":prodid", 24));
            </remarks>
            <param name="conn">an existing database connection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or PL/SQL command</param>
            <param name="commandParameters">an array of OracleParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:HD.DBHelper.OracleHelper.ExecuteNonQuery(System.String,System.String)">
            <summary>
            Execute an OracleCommand (that returns no resultset) against an existing database connection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new OracleParameter(":prodid", 24));
            </remarks>
            <param name="conn">an existing database connection</param>
            <param name="commandText">the stored procedure name or PL/SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:HD.DBHelper.OracleHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])">
            <param name="commandText">the stored procedure name or PL/SQL command</param>
            <param name="commandParameters">an array of OracleParamters used to execute the command</param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.OracleHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            Execute an OracleCommand that returns the first column of the first record against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             Object obj = ExecuteScalar(connString, CommandType.StoredProcedure, "PublishOrders", new OracleParameter(":prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or PL/SQL command</param>
            <param name="commandParameters">an array of OracleParamters used to execute the command</param>
            <returns>An object that should be converted to the expected type using Convert.To{Type}</returns>
        </member>
        <member name="M:HD.DBHelper.OracleHelper.ExecuteScalar(System.Data.OracleClient.OracleTransaction,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            Execute	a OracleCommand (that returns a 1x1 resultset)	against	the	specified SqlTransaction
            using the provided parameters.
            </summary>
            <param name="transaction">A	valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name	or PL/SQL command</param>
            <param name="commandParameters">An array of	OracleParamters used to execute the command</param>
            <returns>An	object containing the value	in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:HD.DBHelper.OracleHelper.ExecuteScalar(System.Data.OracleClient.OracleConnection,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            Execute an OracleCommand that returns the first column of the first record against an existing database connection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             Object obj = ExecuteScalar(conn, CommandType.StoredProcedure, "PublishOrders", new OracleParameter(":prodid", 24));
            </remarks>
            <param name="conn">an existing database connection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or PL/SQL command</param>
            <param name="commandParameters">an array of OracleParamters used to execute the command</param>
            <returns>An object that should be converted to the expected type using Convert.To{Type}</returns>
        </member>
        <member name="M:HD.DBHelper.OracleHelper.CacheParameters(System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            Add a set of parameters to the cached
            </summary>
            <param name="cacheKey">Key value to look up the parameters</param>
            <param name="commandParameters">Actual parameters to cached</param>
        </member>
        <member name="M:HD.DBHelper.OracleHelper.GetCachedParameters(System.String)">
            <summary>
            Fetch parameters from the cache
            </summary>
            <param name="cacheKey">Key to look up the parameters</param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.OracleHelper.PrepareCommand(System.Data.OracleClient.OracleCommand,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            Internal function to prepare a command for execution by the database
            </summary>
            <param name="cmd">Existing command object</param>
            <param name="conn">Database connection object</param>
            <param name="trans">Optional transaction object</param>
            <param name="cmdType">Command type, e.g. stored procedure</param>
            <param name="cmdText">Command test</param>
            <param name="commandParameters">Parameters for the command</param>
        </member>
        <member name="M:HD.DBHelper.OracleHelper.OraBit(System.Boolean)">
            <summary>
            Converter to use boolean data type with Oracle
            </summary>
            <param name="value">Value to convert</param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.OracleHelper.OraBool(System.String)">
            <summary>
            Converter to use boolean data type with Oracle
            </summary>
            <param name="value">Value to convert</param>
            <returns></returns>
        </member>
        <member name="M:HD.DBHelper.OracleHelper.ExecuteSqlTran(System.String,System.Collections.Generic.List{HD.DBHelper.CommandInfo})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="M:HD.DBHelper.OracleHelper.ExecuteSqlTran(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="P:HD.DBHelper.PubConstant.ConnectionString">
            <summary>
            获取连接字符串
            </summary>
        </member>
        <member name="M:HD.DBHelper.PubConstant.GetConnectionString(System.String)">
            <summary>
            得到web.config里配置项的数据库连接字符串。
            </summary>
            <param name="configName"></param>
            <returns></returns>
        </member>
        <member name="T:HD.DBHelper.SqlHelper">
            <summary>
            The SqlHelper class is intended to encapsulate high performance, 
            scalable best practices for common uses of SqlClient.
            </summary>
        </member>
        <member name="M:HD.DBHelper.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:HD.DBHelper.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against an existing database connection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="conn">an existing database connection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:HD.DBHelper.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) using an existing SQL Transaction 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="trans">an existing sql transaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:HD.DBHelper.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand that returns a resultset against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader r = ExecuteReader(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>A SqlDataReader containing the results</returns>
        </member>
        <member name="M:HD.DBHelper.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand that returns the first column of the first record against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             Object obj = ExecuteScalar(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>An object that should be converted to the expected type using Convert.To{Type}</returns>
        </member>
        <member name="M:HD.DBHelper.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand that returns the first column of the first record against an existing database connection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             Object obj = ExecuteScalar(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="conn">an existing database connection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>An object that should be converted to the expected type using Convert.To{Type}</returns>
        </member>
        <member name="M:HD.DBHelper.SqlHelper.CacheParameters(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            add parameter array to the cache
            </summary>
            <param name="cacheKey">Key to the parameter cache</param>
            <param name="cmdParms">an array of SqlParamters to be cached</param>
        </member>
        <member name="M:HD.DBHelper.SqlHelper.GetCachedParameters(System.String)">
            <summary>
            Retrieve cached parameters
            </summary>
            <param name="cacheKey">key used to lookup parameters</param>
            <returns>Cached SqlParamters array</returns>
        </member>
        <member name="M:HD.DBHelper.SqlHelper.PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Prepare a command for execution
            </summary>
            <param name="cmd">SqlCommand object</param>
            <param name="conn">SqlConnection object</param>
            <param name="trans">SqlTransaction object</param>
            <param name="cmdType">Cmd type e.g. stored procedure or text</param>
            <param name="cmdText">Command text, e.g. Select * from Products</param>
            <param name="cmdParms">SqlParameters to use in the command</param>
        </member>
    </members>
</doc>
